// Code generated by mockery v2.14.0. DO NOT EDIT.

package rbac

import mock "github.com/stretchr/testify/mock"

// MockToken is an autogenerated mock type for the Token type
type MockToken struct {
	mock.Mock
}

// GetCompanyId provides a mock function with given fields:
func (_m *MockToken) GetCompanyId() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetRole provides a mock function with given fields:
func (_m *MockToken) GetRole() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetUserId provides a mock function with given fields:
func (_m *MockToken) GetUserId() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewMockToken interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockToken creates a new instance of MockToken. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockToken(t mockConstructorTestingTNewMockToken) *MockToken {
	mock := &MockToken{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
