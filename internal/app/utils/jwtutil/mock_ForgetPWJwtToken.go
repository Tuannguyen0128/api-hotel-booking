// Code generated by mockery v2.14.0. DO NOT EDIT.

package jwtutil

import mock "github.com/stretchr/testify/mock"

// MockForgetPWJwtToken is an autogenerated mock type for the ForgetPWJwtToken type
type MockForgetPWJwtToken struct {
	mock.Mock
}

// GenerateToken provides a mock function with given fields:
func (_m *MockForgetPWJwtToken) GenerateToken() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEmail provides a mock function with given fields:
func (_m *MockForgetPWJwtToken) GetEmail() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetExpire provides a mock function with given fields:
func (_m *MockForgetPWJwtToken) GetExpire() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetUserId provides a mock function with given fields:
func (_m *MockForgetPWJwtToken) GetUserId() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsExpired provides a mock function with given fields:
func (_m *MockForgetPWJwtToken) IsExpired() (bool, error) {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ParseToken provides a mock function with given fields: tokenString
func (_m *MockForgetPWJwtToken) ParseToken(tokenString string) error {
	ret := _m.Called(tokenString)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(tokenString)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockForgetPWJwtToken interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockForgetPWJwtToken creates a new instance of MockForgetPWJwtToken. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockForgetPWJwtToken(t mockConstructorTestingTNewMockForgetPWJwtToken) *MockForgetPWJwtToken {
	mock := &MockForgetPWJwtToken{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
