// Code generated by mockery v2.14.0. DO NOT EDIT.

package emailutil

import mock "github.com/stretchr/testify/mock"

// MockEmailUtil is an autogenerated mock type for the EmailUtil type
type MockEmailUtil struct {
	mock.Mock
}

// SendCreateUserEmail provides a mock function with given fields: emailTo, name, surname, tempPassword
func (_m *MockEmailUtil) SendCreateUserEmail(emailTo string, name string, surname string, tempPassword string) error {
	ret := _m.Called(emailTo, name, surname, tempPassword)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, string) error); ok {
		r0 = rf(emailTo, name, surname, tempPassword)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendForgetPasswordEmail provides a mock function with given fields: emailTo, name, surname, token
func (_m *MockEmailUtil) SendForgetPasswordEmail(emailTo string, name string, surname string, token string) error {
	ret := _m.Called(emailTo, name, surname, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, string) error); ok {
		r0 = rf(emailTo, name, surname, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockEmailUtil interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEmailUtil creates a new instance of MockEmailUtil. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEmailUtil(t mockConstructorTestingTNewMockEmailUtil) *MockEmailUtil {
	mock := &MockEmailUtil{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
